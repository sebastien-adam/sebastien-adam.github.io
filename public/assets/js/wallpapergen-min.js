let nlin,ncol,xori,yori,t,iter,itermax,colorRadio,generateBtn,hue,sat,bri,alpha,grid=[],huebase=0,density=0,step=0,sw=0,angleIdx=0,variation=0,isBW=!1,generate=!1;function setup(){createCanvas(windowWidth,windowHeight),stroke(255,255,255),huebase=floor(getR(0,300)),density=floor(getR(2e3,12e3)),step=getR(4,30),sw=getR(.1,.3),angleIdx=floor(getR(0,99)),variation=getR(1,100),isBW=getR(0,1)<.3,itermax=width,t=0,iter=0,colorMode(HSB,360,100,100,1),background(0),itermax/=step,nlin=height/step,ncol=width/step,itermax=constrain(itermax,350,width),generateGrid()}function draw(){if(iter<itermax){xori=constrain(randomGaussian(width/2,width/4),4*step,width-4*step),yori=randomGaussian(height/2,height/8);for(let i=0;i<density;i++){xori=constrain(xori,step,width-step),yori=constrain(yori,0,height),strokeWeight(getR(.1,sw));let i=grid[floor(yori/step)][floor(xori/step)],e=step*cos(i),n=step*sin(i),a=e*map(noise(t),0,1,-.5,.5),o=n*map(noise(t+50),0,1,-.5,.5);if(isBW)if(iter%10==0)sat=0,bri=0,alpha=getR(.01,.6);else if(iter%15==0)sat=100,bri=5;else{sat=0;let i=dist(width/2,height/2,xori+step,yori+step);bri=map(i,0,height/2+getR(0,150),80,1),alpha=map(iter,0,itermax,.5,.05)}else hue=huebase,alpha=getR(.05,map(iter,0,itermax,.2,.9)),iter%10==0?(sat=getR(0,50),bri=getRList([80,getR(0,80)])):iter%15==0?(sat=100,bri=5):(sat=getR(20,100),bri=getR(30,80));if(stroke(hue,sat,bri,alpha),line(xori,yori,xori+e,yori+n),xori+=a,yori+=o,xori>width-2*step||xori<step)break;if(yori>height||yori<0)break;t+=.1}iter++}else noLoop()}function windowResized(){resizeCanvas(windowWidth,windowHeight)}function getR(i,t){return i=isNaN(i)?0:i,Math.random()*(t-i)+i}function getRList(i){return i[Math.floor(Math.random()*i.length)]}function mouseReleased(){noLoop()}function generateGrid(){for(let i=0;i<nlin;i++){grid[i]=[];for(let t=0;t<ncol;t++){let e=[i*t/(t-i+map(variation,1,100,.01,36))*PI,(t%floor(getR(1,36))-i)/-2*PI,t/nlin*(ncol-i+map(variation,1,100,0,height))*PI,t/(nlin+map(variation,1,100,0,height/4))*(ncol-nlin+i)*PI,i/nlin*tan(nlin**-sin(t)-variation)*PI,t**cos(sin(ncol/(tan(i)+1*variation)))*cos(i)*PI,t/sin(nlin*ncol+variation)*PI,(t/cos(nlin*ncol+variation/100)+.001)*PI,sin(t)/(tan(nlin+ncol+variation)+.001)*PI,(sin(t)+tan(i*variation))*PI,(tan(t*variation/100)+tan(i))*PI,tan(t)/(tan(i)+variation/10)*PI,cos(t+i*variation/10)*PI,cos(t*(i+variation))*HALF_PI,tan(t*(i+.02))*tan(t/(i+.01*variation))*TWO_PI,t*(sqrt(i)+variation)*HALF_PI],n=e[angleIdx%e.length];grid[i][t]=n}}}